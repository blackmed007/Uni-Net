generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  first_name   String
  last_name    String
  email        String   @unique
  password     String
  status       Boolean?
  profile_url  String?
  gender       String?
  cityId       String?
  universityId String?
  role         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt @map("updatedAt")

  events     UsersOnEvents[]
  city       City?           @relation(fields: [cityId], references: [id])
  university University?     @relation(fields: [universityId], references: [id])
}

model Event {
  id               String   @id @default(uuid())
  name             String
  description      String
  datetime         DateTime
  location         String
  event_type       String
  event_status     String
  organizer        String
  max_participants Int
  agenda           Json
  speaker          Json
  event_thumbnail  String

  participants UsersOnEvents[]
}

model UsersOnEvents {
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  event    Event    @relation(fields: [eventId], references: [id])
  eventId  String
  joinedAt DateTime @default(now())

  @@id([userId, eventId])
}

model University {
  id        String   @id @default(uuid())
  name      String
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updatedAt")
}

model City {
  id        String   @id @default(uuid())
  name      String
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updatedAt")
}

model Blog {
  id                 String @id @default(uuid())
  title              String
  content            String
  author             String
  category           String
  author_profile_url String
  status             String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updatedAt")
}
